openapi: 3.0.3
info:
  title: A sample person resources.
  description: A sample person resources.
  version: 1.0.0

servers:
  - url: http://localhost:8080
tags:
  - name: person
    description: Everything related to person resource
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /person:
    get:
      tags:
        - person
      summary: Get a list of persons.
      description: Get a list of persons.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persons'                
    post:
      tags:
        - person
      summary: Add a new person.
      description: Add a person.
      requestBody:
        description: Create a new person.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    put:
      tags:
        - person
      summary: Update an existing person.
      description: Update an existing person.
      requestBody:
        description: Update an existent person.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'          
        '404':
          description: Person not found
  /person/{id}:
    get:
      tags:
        - person
      summary: Find a person by ID
      description: The id must be a valid person id.
      parameters:
        - name: id
          in: path
          description: ID of a person.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'          
        '404':
          description: Person not found
    delete:
      tags:
        - person
      summary: Delete a person by ID
      description: The id must be a valid person id.
      parameters:
        - name: id
          in: path
          description: ID of a person.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Person not found
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          description: This field is ignored when creating a new person.
          format: int64
          example: 1
        firstName:
          type: string
          description: Firstname
          example: Juan
        lastName:
          type: string
          description: Lastname
          example: Dela Cruz
    Persons:
      type: array
      items:
        $ref: '#/components/schemas/Person'